- hosts: all
  gather_facts: true
  become: true

  roles:
    - docker
    - network
    - database
    - app
    - proxy

  tasks:
    # Ensure the network exists
    - name: Ensure Docker network exists
      docker_network:
        name: my_network
        state: present

    # Ensure the database container is running and attached to the network
    - name: Run database container
      docker_container:
        name: my_db
        image: gbrom/tp-devops-database:latest
        state: started
        restart_policy: unless-stopped
        networks:
          - my_network
        env:
          DB_USER: postgres
          DB_PASSWORD: password
          DB_NAME: postgres

    # Ensure the backend application container is running and attached to the network
    - name: Run backend application container
      docker_container:
        name: backend_app
        image: gbrom/tp-devops-simple-api:latest
        state: started
        restart_policy: unless-stopped
        networks:
          - my_network
        env:
          DB_URL: jdbc:postgresql://my_db:5432/postgres
          DB_USERNAME: postgres
          DB_PASSWORD: password

    # Ensure the HTTPD / proxy container is running and attached to the network
    - name: Run HTTPD / proxy container
      docker_container:
        name: httpd_proxy
        image: gbrom/tp-devops-http-server:latest
        state: started
        restart_policy: unless-stopped
        networks:
          - my_network
        ports:
          - "80:80"
